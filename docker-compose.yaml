services:

  minecraft:
    image: itzg/minecraft-server:latest
    container_name: minedoscrazy-minecraft
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    ports:
      - "25565:25565"
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes:
      - ./data/minecraft:/data
    environment:
      EULA: TRUE

      SERVER_NAME: Mine dos Crazy
      MOTD: "Owwwwwwwww §aStoneMask§r..."
      ICON: https://i.scdn.co/image/ab67616d0000b27332ff042034155f8757459ddb

      VERSION: 1.21.8
      ONLINE_MODE: false
      MAX_PLAYERS: 12
      ENABLE_COMMAND_BLOCK: false
      DIFFICULTY: normal
      PVP: true
      MODE: survival
      LEVEL_TYPE: minecraft:default
      SPAWN_NPCS: true
      SPAWN_ANIMALS: true
      SPAWN_MONSTERS: true
      GENERATE_STRUCTURES: true
      ALLOW_NETHER: true
      ANNOUNCE_PLAYER_ACHIEVEMENTS: true
      ALLOW_FLIGHT: false
      VIEW_DISTANCE: 12
      SIMULATION_DISTANCE: 4

      ENABLE_RCON: true
      RCON_PORT: 25575
      RCON_PASSWORD: "minedoscrazy"

      MEMORY: 8G
      MAX_MEMORY: 12G
      JVM_XX_OPTS: "-XX:+UseG1GC -XX:ParallelGCThreads=8 -XX:MaxGCPauseMillis=200"

      TYPE: FABRIC
      FABRIC_FORCE_REINSTALL: true
      MODRINTH_ALLOWED_VERSION_TYPE: beta
      MODRINTH_DOWNLOAD_DEPENDENCIES: required
      MODRINTH_PROJECTS: |
        fabric-api
        lithium
        cloth-config
        balm
        inventory-management

  rcon:
    image: itzg/rcon:latest
    container_name: minedoscrazy-rcon
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft-admin
    depends_on:
      minecraft:
        condition: service_healthy
    labels:
      traefik.enable: false
      sablier.enable: true
      sablier.timeout: 60s
      sablier.mode: stop
    volumes:
      - ./data/rcon:/opt/rcon-web-admin/db
    environment:
      RWA_USERNAME: ${RCON_ADMIN_USER:-admin}
      RWA_PASSWORD: ${RCON_ADMIN_PASSWORD:-admin}
      RWA_ADMIN: "TRUE"
      RWA_RCON_HOST: minecraft
      RWA_RCON_PASSWORD: "minedoscrazy"
      RWA_WEBSOCKET_URL_SSL: "wss://rcon.${DOMAIN_NAME:-localhost}/ws/"
      RWA_WEBSOCKET_URL: "ws://rcon.${DOMAIN_NAME:-localhost}/ws/"

  bluemap:
    image: ghcr.io/bluemap-minecraft/bluemap:latest
    container_name: minedoscrazy-bluemap
    restart: unless-stopped
    command: -r -u -w
    profiles:
      - web
    depends_on:
      minecraft:
        condition: service_healthy
    labels:
      traefik.enable: false
      sablier.enable: true
      sablier.timeout: 60s
      sablier.mode: stop
    volumes:
      - ./config/bluemap/core.conf:/app/config/core.conf:ro
      - ./data/bluemap/config:/app/config
      - ./data/bluemap/web:/app/web
      - ./data/bluemap/data:/app/data
      - ./data/minecraft/world:/app/world
  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: minedoscrazy-portainer
    restart: unless-stopped
    profiles:
      - docker-admin
    security_opt:
      - no-new-privileges:true
    labels:
      traefik.enable: false
      sablier.enable: true
      sablier.timeout: 60s
      sablier.mode: stop
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/portainer:/data

  minecraft-exporter:
    image: ghcr.io/dirien/minecraft-exporter:latest
    container_name: minedoscrazy-minecraft-exporter
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - monitoring
    depends_on:
      minecraft:
        condition: service_healthy
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes:
      - ./data/minecraft/world:/minecraft/world
    environment:
      WEB_DISABLED_EXPORTER_METRICS: true
      MC_RCON_ADDRESS: minecraft:25575
      MC_RCON_PASSWORD: minedoscrazy
      MC_NAME_SOURCE: offline
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: minedoscrazy-node-exporter
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - monitoring
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /run/udev:/run/udev:ro
      - /:/rootfs:ro
    labels:
      traefik.enable: false
      sablier.enable: false
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: minedoscrazy-cadvisor
    restart: unless-stopped
    privileged: true
    profiles:
      - monitoring
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"

  loki:
    image: grafana/loki:3.5
    container_name: minedoscrazy-loki
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - monitoring
    command: -config.file=/etc/loki/config/config.yml
    volumes:
      - ./config/loki/config.yaml:/etc/loki/config/config.yml:ro
    labels:
      traefik.enable: false
      sablier.enable: false
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: minedoscrazy-prometheus
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - monitoring
    depends_on:
      node-exporter:
        condition: service_started
      minecraft-exporter:
        condition: service_started
    command:
      - "--web.enable-remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    labels:
      traefik.enable: false
      sablier.enable: false
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:latest
    container_name: minedoscrazy-promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    user: root
    depends_on:
      loki:
        condition: service_healthy
    profiles:
      - minecraft
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes:
      - ./config/promtail/config.yaml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  grafana:
    image: grafana/grafana:12.1.1
    container_name: minedoscrazy-grafana
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - monitoring
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
    labels:
      traefik.enable: false
      sablier.enable: true
      sablier.timeout: 60s
      sablier.mode: stop
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./data/grafana:/var/lib/grafana
    environment:
      GF_SERVER_ROOT_URL: http://monitoring.${DOMAIN_NAME:-localhost}/

  traefik:
    image: traefik:v3.5
    container_name: minedoscrazy-traefik
    restart: unless-stopped
    profiles:
      - web
    ports:
      - "80:80"
      - "443:443"
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes:
      - ./config/traefik/traefik.yaml:/etc/traefik/traefik.yml:ro
      - ./config/traefik/dynamic-config.yaml:/etc/traefik/dynamic-config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME:-localhost}
      DOMAIN_ADMIN_EMAIL: ${DOMAIN_ADMIN_EMAIL:-admin@localhost}

  sablier:
    image: sablierapp/sablier:1.10.1
    container_name: minedoscrazy-sablier
    restart: unless-stopped
    command: start --provider.name=docker
    profiles:
      - web
    labels:
      traefik.enable: false
      sablier.enable: false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock