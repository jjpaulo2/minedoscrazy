services:

  minecraft:
    image: itzg/minecraft-server:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    ports:
      - "25565:25565"
    volumes:
      - ./data/minecraft:/data
    environment:
      EULA: TRUE

      SERVER_NAME: Mine dos Crazy
      MOTD: "Owwwwwwwww §aStoneMask§r..."
      ICON: https://i.scdn.co/image/ab67616d0000b27332ff042034155f8757459ddb

      VERSION: 1.21.8
      ONLINE_MODE: false
      MAX_PLAYERS: 12
      ENABLE_COMMAND_BLOCK: false
      DIFFICULTY: normal
      PVP: true
      MODE: survival
      LEVEL_TYPE: minecraft:default
      SPAWN_NPCS: true
      SPAWN_ANIMALS: true
      SPAWN_MONSTERS: true
      GENERATE_STRUCTURES: true
      ALLOW_NETHER: true
      ANNOUNCE_PLAYER_ACHIEVEMENTS: true
      ALLOW_FLIGHT: false
      VIEW_DISTANCE: 12
      SIMULATION_DISTANCE: 4

      ENABLE_RCON: true
      RCON_PORT: 25575
      RCON_PASSWORD: "minedoscrazy"

      MEMORY: 8G
      MAX_MEMORY: 12G
      JVM_XX_OPTS: "-XX:+UseG1GC -XX:ParallelGCThreads=8 -XX:MaxGCPauseMillis=200"

      TYPE: FABRIC
      FABRIC_FORCE_REINSTALL: true
      MODRINTH_ALLOWED_VERSION_TYPE: beta
      MODRINTH_DOWNLOAD_DEPENDENCIES: required
      MODRINTH_PROJECTS: |
        fabric-api
        lithium
        cloth-config
        balm
        inventory-management

  rcon:
    image: itzg/rcon:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    depends_on:
      minecraft:
        condition: service_healthy
    volumes:
      - ./data/rcon:/opt/rcon-web-admin/db
    environment:
      RWA_USERNAME: ${RCON_ADMIN_USERNAME:-admin}
      RWA_PASSWORD: ${RCON_ADMIN_PASSWORD:-admin}
      RWA_ADMIN: "TRUE"
      RWA_RCON_HOST: minecraft
      RWA_RCON_PASSWORD: "minedoscrazy"
      RWA_WEBSOCKET_URL_SSL: "wss://${DOMAIN_NAME}/rcon-ws/"
      RWA_WEBSOCKET_URL: "ws://${DOMAIN_NAME}/rcon-ws/"
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://rcon:4326/"]
      interval: 30s
      timeout: 5s
      retries: 3

  bluemap:
    image: ghcr.io/bluemap-minecraft/bluemap:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    command: -r -u -w
    profiles:
      - minecraft
    depends_on:
      minecraft:
        condition: service_healthy
    volumes:
      - ./config/bluemap/core.conf:/app/config/core.conf:ro
      - ./data/bluemap/config:/app/config
      - ./data/bluemap/web:/app/web
      - ./data/bluemap/data:/app/data
      - ./data/minecraft/world:/app/world
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://bluemap:8100/"]
      interval: 30s
      timeout: 5s
      retries: 3
  
  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/portainer:/data

  minecraft-exporter:
    image: ghcr.io/dirien/minecraft-exporter:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    depends_on:
      minecraft:
        condition: service_healthy
    volumes:
      - ./data/minecraft/world:/minecraft/world
    environment:
      WEB_DISABLED_EXPORTER_METRICS: true
      MC_RCON_ADDRESS: minecraft:25575
      MC_RCON_PASSWORD: minedoscrazy
      MC_NAME_SOURCE: offline
  
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /run/udev:/run/udev:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    command: -config.file=/etc/loki/config/config.yml
    volumes:
      - ./config/loki/config.yaml:/etc/loki/config/config.yml:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    volumes:
      - ./config/promtail/config.yaml:/etc/promtail/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    depends_on:
      node-exporter:
        condition: service_started
      minecraft-exporter:
        condition: service_started
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - minecraft
    depends_on:
      prometheus:
        condition: service_healthy
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./data/grafana:/var/lib/grafana
    environment:
      GF_SERVE_FROM_SUB_PATH: true
      GF_SERVER_ROOT_URL: http://${DOMAIN_NAME}/monitoring/
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://grafana:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 5

  nginx:
    image: nginxinc/nginx-unprivileged:alpine
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - no-ssl
    depends_on:
      rcon:
        condition: service_started
      bluemap:
        condition: service_started
      portainer:
        condition: service_started
      grafana:
        condition: service_started
    ports:
      - '80:80'
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf:/etc/nginx/conf.d/:ro
      - ./config/nginx/www:/var/www/html
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://nginx/"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx-ssl:
    image: nginxinc/nginx-unprivileged:alpine
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      rcon:
        condition: service_started
      bluemap:
        condition: service_started
      portainer:
        condition: service_started
      grafana:
        condition: service_started
    profiles:
      - ssl
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./data/nginx/nginx.ssl.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf:/etc/nginx/conf.d/:ro
      - ./config/nginx/www:/var/www/html:ro
      - ./data/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD", "curl", "-kf", "https://nginx-ssl/"]
      interval: 30s
      timeout: 5s
      retries: 3

  new-ssl-certificate:
    image: certbot/certbot:latest
    restart: no
    user: "${UID:-1000}:${GID:-1000}"
    profiles:
      - new-ssl-certificate
    volumes:
      - ./config/nginx/www:/var/www/html
      - ./data/letsencrypt:/etc/letsencrypt
      - ./logs/letsencrypt:/var/log/letsencrypt
    command: >
      certonly --webroot
        --preferred-challenges http
        -d ${DOMAIN_NAME}
        --http-01-address 0.0.0.0
        --email ${DOMAIN_ADMIN_EMAIL}
        --webroot-path /var/www/html
        --agree-tos
        --non-interactive
        --verbose
